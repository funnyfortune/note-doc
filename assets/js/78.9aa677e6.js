(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{399:function(e,r,t){"use strict";t.r(r);var a=t(6),n=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"平台技术架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#平台技术架构"}},[e._v("#")]),e._v(" 平台技术架构")]),e._v(" "),r("ul",[r("li",[e._v("基于Spring Boot 2.X、Spring Cloud 和Spring Cloud Alibaba")]),e._v(" "),r("li",[e._v("主要针对解决微服务和业务开发时常见的非功能性需求")]),e._v(" "),r("li",[e._v("提供了基础的企业级的应用开发，如流程、表单、组织架构、安全认证、门户等")]),e._v(" "),r("li",[e._v("提供应用管理，方便第三方系统接入，支持多租户(应用隔离)")]),e._v(" "),r("li",[e._v("前后端分离的企业级微服务架构")]),e._v(" "),r("li",[e._v("引入组件化的思想实现高内聚低耦合并且高度可配置化")]),e._v(" "),r("li",[e._v("注重代码规范，严格控制包依赖，每个工程基本都是最小依赖")]),e._v(" "),r("li",[e._v("适合企业级的应用功能扩展与开发")]),e._v(" "),r("li",[e._v("适合企业往技术中台、数据中台、业务中台进行模块与业务的规划扩展\n"),r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/jg.png",alt:""}})])]),e._v(" "),r("h2",{attrs:{id:"主要技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要技术"}},[e._v("#")]),e._v(" 主要技术")]),e._v(" "),r("h3",{attrs:{id:"后端技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后端技术"}},[e._v("#")]),e._v(" 后端技术")]),e._v(" "),r("h4",{attrs:{id:"springboot框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot框架"}},[e._v("#")]),e._v(" SpringBoot框架")]),e._v(" "),r("p",[e._v("1、介绍\n"),r("a",{attrs:{href:"https://spring.io/projects/spring-boot#learn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spring Boot "),r("OutboundLink")],1),e._v(" 是一款开箱即用框架，提供各种默认配置来简化项目配置。让我们的 "),r("code",[e._v("Spring")]),e._v(" 应用变的更轻量化、更快的入门。\n在主程序执行 "),r("code",[e._v("main")]),e._v(" 函数就可以运行。你也可以打包你的应用为 "),r("code",[e._v("jar")]),e._v(" 并通过使用 "),r("code",[e._v("java -jar")]),e._v(' 来运行你的Web应用。它遵循"约定优先于配置"的原则，\n使用 '),r("code",[e._v("SpringBoot")]),e._v(" 只需很少的配置，大部分的时候直接使用默认的配置即可。同时可以与 "),r("code",[e._v("Spring Cloud")]),e._v(" 的微服务无缝结合。")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),r("p",[r("code",[e._v("Spring Boot2.x")]),e._v(" 版本环境要求必须是 "),r("code",[e._v("jdk8")]),e._v(" 或以上版本，服务器 "),r("code",[e._v("Tomcat8")]),e._v(" 或以上版本")])]),e._v(" "),r("p",[r("strong",[e._v("Springboot版本选择")]),e._v(" "),r("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/releases/",target:"_blank",rel:"noopener noreferrer"}},[e._v("git源码地址"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Release-Notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpringBoot2.0新特性"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("2、优点")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("使编码变得简单： 推荐使用注解。")])]),e._v(" "),r("li",[r("p",[e._v("使配置变得简单： 自动配置、快速集成新技术能力 没有冗余代码生成和XML配置的要求")])]),e._v(" "),r("li",[r("p",[e._v("使部署变得简单： 内嵌Tomcat、Jetty、Undertow等web容器，无需以war包形式部署")])]),e._v(" "),r("li",[r("p",[e._v("使监控变得简单： 提供运行时的应用监控")])]),e._v(" "),r("li",[r("p",[e._v("使集成变得简单： 对主流开发框架的无配置集成。")])]),e._v(" "),r("li",[r("p",[e._v("使开发变得简单： 极大地提高了开发快速构建项目、部署效率。")])])]),e._v(" "),r("h4",{attrs:{id:"springcloud框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springcloud框架"}},[e._v("#")]),e._v(" SpringCloud框架")]),e._v(" "),r("p",[e._v("1、介绍\n"),r("a",{attrs:{href:"ttps://spring.io/projects/spring-cloud#learn"}},[e._v("Spring Cloud")]),e._v(" 是一系列框架的有序集合。它利用 "),r("code",[e._v("Spring Boot")]),e._v(" 的开发便利性巧妙地简化了分布式系统基础设施的开发，\n如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用 "),r("code",[e._v("Spring Boot")]),e._v(" 的开发风格做到一键启动和部署。\n"),r("code",[e._v("Spring Cloud")]),e._v(" 并没有重复制造轮子，它只是将目前各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，\n通过 "),r("code",[e._v("Spring Boot")]),e._v(" 风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。")]),e._v(" "),r("p",[e._v("2、优点")]),e._v(" "),r("p",[e._v("把模块拆分，使用接口通信，降低模块之间的耦合度。")]),e._v(" "),r("p",[e._v("把项目拆分成若干个子项目，不同的团队负责不同的子项目。")]),e._v(" "),r("p",[e._v("增加功能时只需要再增加一个子项目，调用其他系统的接口就可以。")]),e._v(" "),r("p",[e._v("可以灵活的进行分布式部署。")]),e._v(" "),r("h4",{attrs:{id:"springcloud-alibaba框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-alibaba框架"}},[e._v("#")]),e._v(" SpringCloud Alibaba框架")]),e._v(" "),r("p",[e._v("Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。")]),e._v(" "),r("p",[e._v("依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。")]),e._v(" "),r("p",[e._v("参考文档 请查看 "),r("a",{attrs:{href:"https://github.com/alibaba/spring-cloud-alibaba/wiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("WIKI"),r("OutboundLink")],1),e._v(" 。")]),e._v(" "),r("h4",{attrs:{id:"主要功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要功能"}},[e._v("#")]),e._v(" 主要功能")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("服务限流降级")]),e._v("：默认支持 WebServlet、WebFlux、OpenFeign、RestTemplate、Spring Cloud Gateway、Zuul、Dubbo 和 RocketMQ 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。")]),e._v(" "),r("li",[r("strong",[e._v("服务注册与发现")]),e._v("：适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。")]),e._v(" "),r("li",[r("strong",[e._v("分布式配置管理")]),e._v("：支持分布式系统中的外部化配置，配置更改时自动刷新。")]),e._v(" "),r("li",[r("strong",[e._v("消息驱动能力")]),e._v("：基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。")]),e._v(" "),r("li",[r("strong",[e._v("分布式事务")]),e._v("：使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。")])]),e._v(" "),r("h4",{attrs:{id:"组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[e._v("#")]),e._v(" 组件")]),e._v(" "),r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/alibaba/Sentinel",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentinel"),r("OutboundLink")],1)]),e._v("：把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。")]),e._v(" "),r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/alibaba/Nacos",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nacos"),r("OutboundLink")],1)]),e._v("：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。")]),e._v(" "),r("p",[r("strong",[r("a",{attrs:{href:"https://rocketmq.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RocketMQ"),r("OutboundLink")],1)]),e._v("：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。")]),e._v(" "),r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/seata/seata",target:"_blank",rel:"noopener noreferrer"}},[e._v("Seata"),r("OutboundLink")],1)]),e._v("：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。")]),e._v(" "),r("h3",{attrs:{id:"前端技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端技术"}},[e._v("#")]),e._v(" 前端技术")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://v2.cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue"),r("OutboundLink")],1),e._v("是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://nodejs.org/zh-cn/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm：node.js"),r("OutboundLink")],1),e._v("的包管理工具，用于统一管理我们前端项目中需要用到的包、插件、工具、命令等，便于开发和维护。")])]),e._v(" "),r("li",[r("p",[r("RouterLink",{attrs:{to:"/note/es6/"}},[e._v("ES6")]),e._v("：Javascript的新版本，ECMAScript6的简称。利用ES6我们可以简化我们的JS代码，同时利用其提供的强大功能来快速实现JS逻辑。")],1)]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://cli.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-cli"),r("OutboundLink")],1),e._v("：Vue的脚手架工具，用于自动生成Vue项目的目录及文件。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://router.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-router"),r("OutboundLink")],1),e._v("： Vue提供的前端路由工具，利用其我们实现页面的路由控制，局部刷新及按需加载，构建单页应用，实现前后端分离。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://vuex.vuejs.org/zh/guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex"),r("OutboundLink")],1),e._v("：Vue提供的状态管理工具，用于统一管理我们项目中各种数据的交互和重用，存储我们需要用到数据对象。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://element.eleme.cn/2.15/#/zh-CN/component",target:"_blank",rel:"noopener noreferrer"}},[e._v("element-ui"),r("OutboundLink")],1),e._v("：基于MVVM框架Vue开源出来的一套前端ui组件。")])])]),e._v(" "),r("h3",{attrs:{id:"nacos注册配置中心"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nacos注册配置中心"}},[e._v("#")]),e._v(" Nacos注册配置中心")]),e._v(" "),r("p",[e._v("采用"),r("a",{attrs:{href:"https://github.com/alibaba/Nacos",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nacos Server"),r("OutboundLink")],1),e._v("进行在线的配置中心\n可配置多套运行环境，一般为开发，测试，生产的环境，进行集中式的配置。")]),e._v(" "),r("p",[r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/nacos.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"elfk的日志分析系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#elfk的日志分析系统"}},[e._v("#")]),e._v(" ELFK的日志分析系统")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("为什么采用Filbeat + Logstash+ ElasticSearch+ Kibana的架构实现在线日志收集并归集管理，展示日志分析处理？")]),e._v(" "),r("p",[e._v("日志，对于任何系统来说都是及其重要的组成部分。但是由于现在分布式的微服务特点，面对大量的数据，又是分布在各个不同地方，如果我们需要去查找一些重要的信息\n，如果还是使用传统的方法，去登陆到一台台机器上查看？看来传统的工具和方法已经显得非常笨拙和低效了。\n一个完整的集中式日志系统，是离不开以下几个主要特点的:")]),e._v(" "),r("ul",[r("li",[e._v("收集－能够采集多种来源的日志数据")]),e._v(" "),r("li",[e._v("传输－能够稳定的把日志数据传输到中央系统")]),e._v(" "),r("li",[e._v("存储－如何存储日志数据")]),e._v(" "),r("li",[e._v("分析－可以支持 UI 分析")]),e._v(" "),r("li",[e._v("警告－能够提供错误报告，监控机制")])]),e._v(" "),r("blockquote",[r("p",[e._v("开源实时日志分析ELFK平台能够完美的解决我们上述的问题。")])])]),e._v(" "),r("blockquote"),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ElasticSearch"),r("OutboundLink")],1),e._v("：是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/8.1/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Logstash"),r("OutboundLink")],1),e._v("：  是一个完全开源的工具，他可以对你的日志进行收集、分析，并将其存储供以后使用。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.elastic.co/guide/en/beats/filebeat/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Filebeat"),r("OutboundLink")],1),e._v("：作为 Beats 家族的一员，Filebeat 是一个轻量级的日志传输工具，它的存在正弥补了 Logstash 的缺点：Filebeat 作为一个轻量级的日志传输工具可以将日志推送到中心 Logstash。在版本 5.x 中，Elasticsearch 具有解析的能力（像 Logstash 过滤器）— Ingest。这也就意味着可以将数据直接用 Filebeat 推送到 Elasticsearch，并让 Elasticsearch 既做解析的事情，又做存储的事情。也不需要使用缓冲，因为 Filebeat 也会和 Logstash 一样记住上次读取的偏移；")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.elastic.co/guide/cn/kibana/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kibana"),r("OutboundLink")],1),e._v("：也是一个开源和免费的工具，Kibana可以为 Logstash和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。\n"),r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/elfk.png",alt:""}})])]),e._v(" "),r("p",[e._v("当数据量非常大的时候，Logstash的压力特别大,造成卡死而导致数据无法处理。也会导致ElasticSearch有时候查询历史日志会很慢。\n为了减缓Logstash的压力，可以使用MQ进行缓冲，消息队列进行缓冲。若不想增加项目复杂度，可以使用"),r("a",{attrs:{href:"http://www.redis.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("redis"),r("OutboundLink")],1),e._v("，若为了效率和消息的送达率，建议使用"),r("a",{attrs:{href:"https://kafka.apachecn.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("kafka"),r("OutboundLink")],1),e._v("。\n"),r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/elfk-kafka.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"skywalking链路追踪"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#skywalking链路追踪"}},[e._v("#")]),e._v(" Skywalking链路追踪")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://skywalking.apache.org/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SkyWalking"),r("OutboundLink")],1),e._v(": 一个开源的可观测平台, 用于从服务和云原生基础设施收集, 分析, 聚合及可视化数据。SkyWalking 提供了一种简便的方式来清晰地观测分布式系统, 甚至横跨多个云平台。SkyWalking 更是一个现代化的应用程序性能监控(Application Performance Monitoring)系统, 尤其专为云原生、基于容器的分布式系统设计.\n"),r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/skywalking.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"prometheus-grafana-大屏监控"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-grafana-大屏监控"}},[e._v("#")]),e._v(" Prometheus+Grafana 大屏监控")]),e._v(" "),r("p",[e._v("监控平台，是我们不可或缺的组件。随着 "),r("a",{attrs:{href:"https://prometheus.io/docs/introduction/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prometheus"),r("OutboundLink")],1),e._v(" 的不断发展，国内越来越多的公司，采用  "),r("a",{attrs:{href:"https://prometheus.io/docs/introduction/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prometheus"),r("OutboundLink")],1),e._v(" + "),r("a",{attrs:{href:"https://grafana.com/grafana/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grafana"),r("OutboundLink")],1),e._v(" 来搭建统一的监控平台。")]),e._v(" "),r("p",[r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/grafana.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"kubesphere-持续集成持续发布"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubesphere-持续集成持续发布"}},[e._v("#")]),e._v(" KubeSphere 持续集成持续发布")]),e._v(" "),r("div",{staticClass:"custom-block theorem"},[r("p",{staticClass:"title"},[e._v("什么是 KubeSphere")]),r("p",[r("a",{attrs:{href:"https://kubesphere.com.cn/docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("KubeSphere"),r("OutboundLink")],1),e._v(" 是在 "),r("a",{attrs:{href:"http://docs.kubernetes.org.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kubernetes"),r("OutboundLink")],1),e._v(" 之上构建的面向云原生应用的分布式操作系统，完全开源，支持多云与多集群管理，提供全栈的 IT 自动化运维能力，简化企业的 DevOps 工作流。它的架构可以非常方便地使第三方应用与云原生生态组件进行即插即用 (plug-and-play) 的集成。")]),e._v(" "),r("p",[e._v("作为全栈的多租户容器平台，KubeSphere 提供了运维友好的向导式操作界面，帮助企业快速构建一个强大和功能丰富的容器云平台。KubeSphere 为用户提供构建企业级 Kubernetes 环境所需的多项功能，例如多云与多集群管理、Kubernetes 资源管理、DevOps、应用生命周期管理、微服务治理（服务网格）、日志查询与收集、服务与网络、多租户管理、监控告警、事件与审计查询、存储管理、访问权限控制、GPU 支持、网络策略、镜像仓库管理以及安全管理等。")]),e._v(" "),r("div",{staticClass:"custom-block right"},[r("p",[e._v("来自 "),r("a",{attrs:{href:"https://kubesphere.com.cn/docs/v3.3/introduction/what-is-kubesphere/",target:"_blank",rel:"noopener noreferrer"}},[e._v("KubeSphere官方文档"),r("OutboundLink")],1)])])]),r("p",[r("img",{attrs:{src:"/note-doc/img/dev/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/kubesphere-feature-overview.jpeg",alt:""}})])])}),[],!1,null,null,null);r.default=n.exports}}]);